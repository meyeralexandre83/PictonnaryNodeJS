<% var title = 'Formulaire signup' %>
<% include head %>
<div class="container">
<h2>Modification de votre profil</h2>
<form method="post" class="form-horizontal" action="/changeprofil" >
    <!-- c'est quoi les attributs action et method ? action renvoie à la page qui va traiter les données envoyées et method précise si on va traiter beaucoup on peu d'information-->
    <!-- qu'y a-t-il d'autre comme possiblité que post pour l'attribut method ? il existe get qui traite peu d'information-->
    <span class="form_hint">Les champs obligatoires sont indiqués par *</span>


		<div class="form-group">
            <label class="control-label col-sm-2" for="telephone">Téléphone :</label>
			<div class="col-sm-10">
            <input class="form-control" type="tel" name="telephone" id="telephone" value="<%= user.tel %>"/>
			</div>
		</div>
		<div class="form-group">
            <label class="control-label col-sm-2" for="siteweb">Site Web :</label>
			<div class="col-sm-10">
            <input class="form-control" type="url" name="siteweb" id="siteweb"/>
			</div>
		</div>


		<div class="form-group">
            <label class="control-label col-sm-2" for="ville">Ville :</label>
			<div class="col-sm-10">
            <input class="form-control" type="text" name="ville" id="ville"/>
			</div>
		</div>

		<div class="form-group">
            <label class="control-label col-sm-2" for="couleur">Couleur Pr&eacute;f&eacute;r&eacute;e :</label>
			<div class="col-sm-10">
            <input class="form-control" type="color" name="couleur" id="couleur" value="#000000"/>
			</div>
		</div>
		<div class="form-group">
            <label class="control-label col-sm-2" for="profilepicfile">Photo de profil:</label>
			<div class="col-sm-10">
            <input class="form-control" type="file" id="profilepicfile" onchange="loadProfilePic(this)"/>
			</div>
            <!-- l'input profilepic va contenir le chemin vers l'image sur l'ordinateur du client -->
            <!-- on ne veut pas envoyer cette info avec le formulaire, donc il n'y a pas d'attribut name -->
            <span class="form_hint">Choisissez une image.</span>
			<div class="col-sm-10">
            <input class="form-control" type="hidden" name="profilepic" id="profilepic"/>
			</div>
            <!-- l'input profilepic va contenir l'image redimensionnée sous forme d'une data url -->
            <!-- c'est cet input qui sera envoyé avec le formulaire, sous le nom profilepic -->
            <canvas id="preview" width="0" height="0"></canvas>

            <script>
                loadProfilePic = function (e) {
                    // on récupère le canvas où on affichera l'image
                    var canvas = document.getElementById("preview");
                    var ctx = canvas.getContext("2d");
                    // on réinitialise le canvas: on l'efface, et déclare sa largeur et hauteur à 0
                    ctx.fillStyle="white";
                    ctx.fillRect(0,0,canvas.width,canvas.height);
                    canvas.width=0;
                    canvas.height=0;
                    // on récupérer le fichier: le premier (et seul dans ce cas là) de la liste
                    var file = document.getElementById("profilepicfile").files[0];
                    // l'élément img va servir à stocker l'image temporairement
                    var img = document.createElement("img");
                    // l'objet de type FileReader nous permet de lire les données du fichier.
                    var reader = new FileReader();
                    // on prépare la fonction callback qui sera appelée lorsque l'image sera chargée
                    reader.onload = function(e) {
                        //on vérifie qu'on a bien téléchargé une image, grâce au mime type
                        if (!file.type.match(/image.*/)) {
                            // le fichier choisi n'est pas une image: le champs profilepicfile est invalide, et on supprime sa valeur
                            document.getElementById("profilepicfile").setCustomValidity("Il faut télécharger une image.");
                            document.getElementById("profilepicfile").value = "";
                        }
                        else {
                            // le callback sera appelé par la méthode getAsDataURL, donc le paramètre de callback e est une url qui contient
                            // les données de l'image. On modifie donc la source de l'image pour qu'elle soit égale à cette url
                            // on aurait fait différemment si on appelait une autre méthode que getAsDataURL.
                            img.src = e.target.result;
                            // le champs profilepicfile est valide
                            document.getElementById("profilepicfile").setCustomValidity("");
                            var MAX_WIDTH = 96;
                            var MAX_HEIGHT = 96;
                            var width = img.width;
                            var height = img.height;

                            // A FAIRE: si on garde les deux lignes suivantes, on rétrécit l'image mais elle sera déformée
                            // Vous devez supprimer ces lignes, et modifier width et height pour:
                            //    - garder les proportions,
                            //    - et que le maximum de width et height soit égal à 96
                            if(width > height)
							{
								height = (height*MAX_HEIGHT)/width;
								width = MAX_WIDTH;
							}
                            else if(height > width)
							{
								width = (width*MAX_WIDTH)/height;
								height = MAX_HEIGHT;
							}
							else
							{
								height = MAX_HEIGHT;
								width = MAX_WIDTH;
							}
                            canvas.width = width;
                            canvas.height = height;
                            // on dessine l'image dans le canvas à la position 0,0 (en haut à gauche)
                            // et avec une largeur de width et une hauteur de height
                            ctx.drawImage(img, 0, 0, width, height);
                            // on exporte le contenu du canvas (l'image redimensionnée) sous la forme d'une data url
                            var dataurl = canvas.toDataURL("image/png");
                            // on donne finalement cette dataurl comme valeur au champs profilepic
                            document.getElementById("profilepic").value = dataurl;
                        };
                    }
                    // on charge l'image pour de vrai, lorsque ce sera terminé le callback loadProfilePic sera appelé.
                    reader.readAsDataURL(file);
                }
            </script>
		</div>
		<div class="form-group">
		<div class="col-sm-offset-2 col-sm-10">
			<input type="submit" class="btn btn-default" value="Modifier votre profil">
		</div>
		</div>
</form>
</div>
</body>
</html>
